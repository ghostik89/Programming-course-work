//добавить еще ошибок, которые были реализованны до реализации побочных и главных функций

1. Файл Main.cpp строка 105
				if (strchr(SourceCode[i], '=') != NULL && !TargetFunc.some_return && CountArgs(SourceCode[i]) != TargetFunc.params) {//	если вызов неверный(возвращаемое значение)
Логическая ошибка, т.к.в фукнции может быть не правильное возвращаемое значение ИЛИ количество аргументов
Решение.
if (strchr(SourceCode[i], '=') != NULL && !TargetFunc.some_return ||CountArgs(SourceCode[i]) != TargetFunc.params) {//	если вызов неверный(возвращаемое значение)
2. Не учитываются отступы при поиске скобочек
исходный ошибочный код
if (!strcmp(StringOfCode, "{"))
		BraketsCounter++;
	if (!strcmp(StringOfCode, "}"))
		BraketsCounter--;
Исправленный код
3. Обнаружена ошибка в работе основной функции
Сбой в тесте UsingUsersFunc возвращает -2
Ошибка в тесте в тестируемом исходнике обнаружено "count(10);}"
Исправлено на "сount(10);", "}"\
4. Обнаружена ошибка на тесте OnlySpaceInArgs
Сбой тесте возвращает 7, а не -1
Причина ошибки - пробелы ошибочно считаются за аргументы при их подсчете
Решение дописать в функции CountArgs
int Args , Spaces;

	Args = 0;
	Spaces = 0;
	if (strcmp(LBracket + 1, RBracket)) {
		Args++;
		for (int i = 0; strcmp(LBracket + i, RBracket); i++) {
			if (LBracket[i] == ',')
				Args++;
			if (LBracket[i] == ' ')
				Spaces++;
		}
	}
	if (Spaces == strlen(LBracket) - 2 || (strchr(StringOfCode,';') != NULL && Spaces == strlen(LBracket) - 3))
		Args = 0;
5. Обнаружена ошибка на тесте OnlySpaceInArgs
Ошибка: не учитываются табуляции
Решение:if (isspace(LBracket[i]))
6. Обнаружена ошибка при выполнениии bat-файла
Ошибка не обрабатывается исключение при вводе значения Row больше, чем указано в условии
Решение добавть условие проверки значений