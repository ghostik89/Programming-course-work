/*!Проверка на правильность вызова функции в исходном коде
	\param[in]: SourceCode - исходный код
	\param[in]: func - исходная функция
	\param[in]: Rows - количество строк в исходном коде
	\return: место ошибки({row} - место ошибки,{-1} - ошибки нет, {-2} - не найдена функция)
*/
int SearchInvalidFuncCall(const char SourceCode[MAX_ROWS][MAX_LENGTH], const char SourceFunc[MAX_LENGTH], int Rows);
================================================================================================

Определить место определения функции
Для всех строк внутри исходного кода
	Если строка кода является декларацией заданной функции
		Завершить поиск и начать считывать функцию
Считать фукнцию(возвращает/нет значение, количество аргументов)
Если фукнция возвращает значение
	Запомнить, что функция возвращает значение
Если в фукнции есть аргуметы(внутри () не пусто)
	Пока мы внутри круглых скобках
		Считать количетсво параметров
Проверка вызовов функции в main() и других фукнциях
Для всех строк внутри исходного кода
Если мы находимся внутри главной функции или функцией, не являющейся искомой
	Пока мы внутри функции
		Если мы встретили фукнцию с таким именем
			Проверить, не присваивается ли на операндну(если она не возвращает значение, то неверный вызов)
			Пока мы внутри круглых скобок
				Посчитать количетсво параметров
			Сравнить полученное количество параметров с искомыми
